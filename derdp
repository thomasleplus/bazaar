#!/bin/bash
# Decodes UTF-16 LE (little-endian) encoded text from stdin
# Strips the byte order mark (0xFF 0xFE) and null bytes to output plain text

set -euo pipefail
IFS=$'\n\t'

counter=0
while LANG=C IFS= read -r -d '' -n 1 char; do
	if [[ "${counter}" -eq 0 ]]; then
		if [ "$(echo -n "${char}" | xxd -p)" != 'ff' ]; then
			>&2 echo "derdp: error: first byte should be 0xFF"
			exit 1
		fi
	elif [[ "${counter}" -eq 1 ]]; then
		if [ "$(echo -n "${char}" | xxd -p)" != 'fe' ]; then
			>&2 echo "derdp: error: second byte should be 0xFE"
			exit 1
		fi
	else
		# null chars are automatically ignored
		printf "%s" "${char}"
	fi
	counter=$((counter + 1))
done
